---
# Default values for alice-service
# This is a YAML-formatted file

# Service identification
nameOverride: ""
fullnameOverride: ""

# Deployment configuration
replicaCount: 1

image:
  repository: ""  # Required: must be provided by each service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8000
  annotations: {}

# Container configuration
containerPort: 8000

# Resource limits - kept low for local development
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

# PostgreSQL database configuration (CloudNativePG)
database:
  enabled: true
  # Single instance for local development
  instances: 1
  size: 1Gi
  storageClass: standard
  # Database name defaults to service name
  name: ""
  # Database user defaults to 'alice'
  user: alice
  # Password will be auto-generated if not specified
  password: ""
  # Additional PostgreSQL parameters
  parameters:
    max_connections: "100"
    shared_buffers: "256MB"
  # Backup configuration
  backup:
    enabled: false
    schedule: "0 2 * * *"
    retentionPolicy: "7d"

# Redis configuration for event bus
redis:
  enabled: true
  # Points to shared Redis instance
  host: alice-events-redis-master.alice-events.svc.cluster.local
  port: 6379
  password: ""

# Environment variables
env: []
  # - name: LOG_LEVEL
  #   value: "INFO"

# Environment variables from secrets
envFrom: []
  # - secretRef:
  #     name: my-secret

# Additional volumes
volumes: []
  # - name: config
  #   configMap:
  #     name: my-config

# Additional volume mounts
volumeMounts: []
  # - name: config
  #   mountPath: /config

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Pod annotations
podAnnotations: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity rules
affinity: {}

# Network policies
networkPolicy:
  enabled: true
  # Allow ingress from same namespace by default
  ingress:
    - from:
      - podSelector: {}
  # Allow database access only from this service
  databaseAccess:
    enabled: true

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Monitoring
monitoring:
  enabled: false
  # Prometheus ServiceMonitor
  serviceMonitor:
    enabled: false
    interval: 30s
    path: /metrics
